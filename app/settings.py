"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.SUCCESS: "alert-success",
    messages.ERROR: "alert-danger",
    messages.WARNING: "alert-warning",
    messages.INFO: "alert-info",
    messages.DEBUG: "alert-secondary",
}

MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-@!mu75onto7#tb0&rq)(sdo=szfbk!6y2cngsq5c1=m&xf&e0*"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = True#

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "users.apps.UsersConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
]

# Добавляем debug_toolbar только в режиме разработки
if DEBUG:
    INSTALLED_APPS += ["debug_toolbar"]

INSTALLED_APPS += [
    "import_export",
    "django_redis",
    "main",
    "goods",
    "carts",
    "orders",
    "django_celery_beat",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "app.middleware.MediaFileMiddleware",  # Добавляем middleware для обслуживания медиа-файлов
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Добавляем debug_toolbar middleware только в режиме разработки
if DEBUG:
    MIDDLEWARE += ["debug_toolbar.middleware.DebugToolbarMiddleware"]

MIDDLEWARE += ["carts.middleware.CartMiddleware"]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                # Стандартные процессоры
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "goods.context_processors.categories",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "fixstar",
        "USER": "fixstar",
        "PASSWORD": "fixstar",
        "HOST": "localhost",
        "PORT": "5432",
    }
}

AUTH_USER_MODEL = "users.User"

# Настройки для аутентификации
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",  # 1 - номер базы Redis
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "KEY_PREFIX": "fixstar",  # Префикс для всех ключей кэша
    }
}
# Для django-redis (если используете cache.delete_pattern)
CACHE_TTL = 60 * 60 * 24  # Время жизни кэша по умолчанию (24 часа)

# Настройки Celery
CELERY_BROKER_URL = "redis://127.0.0.1:6379/2"  # 2 - номер базы Redis для Celery
CELERY_RESULT_BACKEND = "redis://127.0.0.1:6379/2"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TIMEZONE = "Europe/Kiev"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60  # 30 минут

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # Проверка на совпадение с личными данными пользователя
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        "OPTIONS": {
            "user_attributes": ["username", "email"],
            "max_similarity": 0.9,  # Допускаем большую схожесть (значение от 0 до 1)
        },
    },
    # Проверка минимальной длины пароля (8 символов)
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 8,
        },
    },
    # Удалена проверка на распространенные пароли (CommonPasswordValidator)
    # Проверка на пароль, состоящий только из цифр
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "uk"

TIME_ZONE = "Europe/Kiev"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# Настройки логирования
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "debug.log",
            "formatter": "verbose",
        },
    },
    "loggers": {
        "": {  # Корневой логгер для всего проекта
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": True,
        },
        "django.request": {  # Логгер для запросов Django - для отслеживания ошибок 500
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
        "app.middleware": {  # Логгер для нашего middleware
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
        "orders": {  # Логгер для приложения orders
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": False,
        },
        "django.db.backends": {  # Логгер для SQL-запросов
            "handlers": ["console"],
            "level": "INFO",  # Оставляем INFO для SQL-запросов
            "propagate": False,
        },
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Настройки для медиа-файлов
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Для корректного отображения в админке
X_FRAME_OPTIONS = "SAMEORIGIN"

# Для Django 4.0+
DEBUG_TOOLBAR_CONFIG = {"SHOW_TOOLBAR_CALLBACK": lambda request: True}

STATIC_ROOT = BASE_DIR / "staticfiles"  # Для Python 3.10+ (использует pathlib)
SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Или другой backend
SESSION_COOKIE_AGE = 1209600  # 2 недели в секундах
SESSION_SAVE_EVERY_REQUEST = True

# Настройки для отправки электронной почты
# EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"  # Выводим письма в консоль для тестирования
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"  # Для реальной отправки
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "your.email@gmail.com"  # Введите здесь ваш email адрес
EMAIL_HOST_PASSWORD = "your-app-password"  # Введите здесь ваш пароль или app password
DEFAULT_FROM_EMAIL = "your.email@gmail.com"  # Введите здесь ваш email адрес

# URL сайта для формирования ссылок в письмах
SITE_URL = "http://127.0.0.1:8000"

# Настройки для whitenoise
STATICFILES_STORAGE = (
    "whitenoise.storage.StaticFilesStorage"  # Без сжатия и кэширования
)
